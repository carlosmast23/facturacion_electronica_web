/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ec.com.codesoft.codefaclite.controlador.componentes;

import ec.com.codesoft.codefaclite.controlador.dialog.DialogoCodefac;
import ec.com.codesoft.codefaclite.servidorinterfaz.mensajes.MensajeCodefacSistema;
import ec.com.codesoft.codefaclite.servidorinterfaz.comprobantesElectronicos.CorreoCodefac;
import ec.com.codesoft.codefaclite.utilidades.varios.UtilidadesSwingX;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Carlos
 */
public class ComponenteEnvioCorreoPanel extends javax.swing.JPanel {

    private ComponenteCorreoInterface correoInterface;
    /**
     * Creates new form ComponenteEnvioCorreoPanel
     */
    public ComponenteEnvioCorreoPanel() {
        initComponents();
        //this.correoInterface=correoInterface;
        valoresIniciales();
        listenerBotones();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        txtCorreoTitulo = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtCorreoMensaje = new javax.swing.JTextArea();
        btnEnviarCorreo = new javax.swing.JButton();

        setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(txtCorreoTitulo, gridBagConstraints);

        txtCorreoMensaje.setColumns(20);
        txtCorreoMensaje.setRows(5);
        jScrollPane1.setViewportView(txtCorreoMensaje);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(jScrollPane1, gridBagConstraints);

        btnEnviarCorreo.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnEnviarCorreo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/iconos/32Pixeles/email.png"))); // NOI18N
        btnEnviarCorreo.setText("Enviar Correo");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(btnEnviarCorreo, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEnviarCorreo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txtCorreoMensaje;
    private javax.swing.JTextField txtCorreoTitulo;
    // End of variables declaration//GEN-END:variables

    private void listenerBotones() {
        btnEnviarCorreo.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if(txtCorreoTitulo.getText().isEmpty())
                {
                    DialogoCodefac.mensaje("Error","Por favor ingrese un titulo para enviar el correo",DialogoCodefac.MENSAJE_INCORRECTO);
                    return ;
                }
                
                if(txtCorreoMensaje.getText().isEmpty())
                {
                    DialogoCodefac.mensaje("Error","Por favor ingrese un mensaje para enviar el correo",DialogoCodefac.MENSAJE_INCORRECTO);
                    return ;
                }
                
                if(correoInterface.getCorreo()==null || correoInterface.getCorreo().isEmpty())
                {
                    DialogoCodefac.mensaje("Error","El cliente no tiene ingresado un correo",DialogoCodefac.MENSAJE_INCORRECTO);
                    return ;
                }
                
                CorreoCodefac correoCodefac = new CorreoCodefac();
                
                List<String> destinatarios = new ArrayList<String>();
                destinatarios.add(correoInterface.getCorreo());
                HashMap<String, String> mapArchivos = new HashMap<String, String>();

                try {
                    correoCodefac.enviarCorreo(correoInterface.getEmpresa(),txtCorreoMensaje.getText(),txtCorreoTitulo.getText(),destinatarios,mapArchivos);
                    DialogoCodefac.mensaje(MensajeCodefacSistema.CorreoElectronico.CORREO_ENVIADO);
                } catch (CorreoCodefac.ExcepcionCorreoCodefac ex) {
                    Logger.getLogger(ComponenteEnvioCorreoPanel.class.getName()).log(Level.SEVERE, null, ex);
                    DialogoCodefac.mensaje("Error","No se pudo enviar el correo \n\nProblema:\n",DialogoCodefac.MENSAJE_INCORRECTO);
                }
                
                
                
            }
        });
    }

    public ComponenteCorreoInterface getCorreoInterface() {
        return correoInterface;
    }

    public void setCorreoInterface(ComponenteCorreoInterface correoInterface) {
        this.correoInterface = correoInterface;
    }

    private void valoresIniciales() {
        UtilidadesSwingX.placeHolder("Titulo Correo", txtCorreoTitulo);
        UtilidadesSwingX.placeHolder("Mensaje Correo ", txtCorreoMensaje);
                
    }
    
    
}
